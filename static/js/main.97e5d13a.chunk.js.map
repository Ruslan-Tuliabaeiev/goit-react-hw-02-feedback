{"version":3,"sources":["components/Feedback/FeedbackOptins.js","components/Feedback/Statistic.js","components/Section.js","components/Notification.js","App.js","index.js","components/Feedback/feedback.module.css"],"names":["FeedbackOptins","options","onLeaveFeedback","map","el","type","name","onClick","Statistic","good","neutral","bad","total","positive","className","style","statistic","statisticTitle","Section","title","children","Notification","message","App","state","totalNumber","positiveBack","Math","round","handleIncrement","setState","prevState","this","keys","Object","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"kOAiBeA,EAbS,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,QAASC,EAAqB,EAArBA,gBAC/B,OACJ,8BACCD,EAAQE,KAAI,SAACC,GAAD,OACX,wBAAiBC,KAAK,SAASC,KAAK,OAAOC,QAAS,WAAOL,EAAgBE,IAA3E,SAAkFA,GAArEA,S,gBCHFI,EAAY,SAAC,GAA4C,IAA3CC,EAA0C,EAA1CA,KAAMC,EAAoC,EAApCA,QAASC,EAA2B,EAA3BA,IAAKC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAGlD,OAGI,sBAAKC,UAAWC,IAAMC,UAAtB,UAGL,oBAAGF,UAAWC,IAAME,eAApB,cAAqC,yCAAaR,QAGlD,oBAAGK,UAAWC,IAAME,eAApB,cAAqC,4CAAeP,QAGpD,mBAAGI,UAAWC,IAAME,eAApB,SAAoC,wCAAWN,OAIjD,mBAAGG,UAAWC,IAAME,eAApB,SAAoC,0CAAaL,OAEhD,oBAAGE,UAAWC,IAAME,eAApB,UAAoC,sDAAyBJ,EAAzB,OAApC,WCtBWK,EAAU,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC5B,OAAQ,qCACXD,GAAS,6BAAKA,IACdC,MCJYC,EAAe,SAAC,GAAkB,IAAD,IAAhBC,eAAgB,MAAR,GAAQ,EAC1C,OACJ,mCACCA,GAAW,4BAAIA,OCOTC,E,4MAEPC,MAAQ,CACNf,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAIPc,YAAc,WACZ,OAAO,EAAKD,MAAMf,KAAO,EAAKe,MAAMd,QAAU,EAAKc,MAAMb,K,EAG3De,aAAe,WACb,OAAOC,KAAKC,MAA0B,IAAlB,EAAKJ,MAAMf,KAAc,EAAKgB,gB,EAKjDI,gBAAkB,SAACvB,GACjB,EAAKwB,UAAS,SAAAC,GAAS,sBACrBzB,EAAOyB,EAAUzB,GAAQ,O,4CAUhC,WACE,MAA6B0B,KAAKR,MAA3Bf,EAAP,EAAOA,KAAMC,EAAb,EAAaA,QAASC,EAAtB,EAAsBA,IAChBC,EAAQoB,KAAKP,cACbQ,EAAOC,OAAOD,KAAKD,KAAKR,OAC9B,OACF,qCACA,cAAC,EAAD,CACAvB,QAASgC,EACR/B,gBAAiB8B,KAAKH,kBAKvB,cAAC,EAAD,CAASV,MAAM,aAAf,SACCP,EAAQ,EACT,cAAC,EAAD,CACAH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,SAAUmB,KAAKN,iBAEV,cAAC,EAAD,CACLJ,QAAQ,kC,GAtDWa,aAsEJZ,IC7Efa,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCT1BC,EAAOC,QAAU,CAAC,QAAU,0BAA0B,OAAS,yBAAyB,UAAY,4BAA4B,eAAiB,oC","file":"static/js/main.97e5d13a.chunk.js","sourcesContent":["\r\n\r\n\r\n\r\n const FeedbackOptins = ({options, onLeaveFeedback}) => {\r\n    return (\r\n<div>\r\n{options.map((el) =>(\r\n  <button key={el} type=\"button\" name=\"{el}\" onClick={() => {onLeaveFeedback(el)}}>{el}</button>\r\n    ) )}\r\n\r\n</div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default FeedbackOptins;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, {Component} from \"react\";\r\n// //import PropTypes from \"prop-types\";\r\n// import style from './feedback.module.css';\r\n// import { Control } from \"./Control\";\r\n//   import { Statistic } from \"./Statistic\";\r\n\r\n// export class Feedback extends Component {\r\n\r\n//    handleIncrement = () => {\r\n//      this.setState(prevState => {\r\n//          return {\r\n//              good: prevState.good + 1,\r\n            \r\n//          };\r\n//      })\r\n//        };\r\n\r\n//        neutralleIncrement = () => {\r\n//         this.setState(prevState => {\r\n//             return {\r\n             \r\n//                 neutral: prevState.neutral + 1,\r\n                \r\n//             };\r\n//         })\r\n//           };\r\n   \r\n//           badleIncrement = () => {\r\n//             this.setState(prevState => {\r\n//                 return {\r\n                 \r\n//                     bad: prevState.bad + 1,\r\n                   \r\n//                 };\r\n                \r\n//             })\r\n//               };\r\n           \r\n\r\n\r\n// static defaultProps = {\r\n//     initialValue: 0,\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n// render() {\r\n// return (\r\n//     <div className={style.feedback}>\r\n// <h2 className={style.feedbackList}>Please leave feedback</h2>\r\n\r\n\r\n\r\n//   <Control\r\n//   handleIncrement={this.handleIncrement}\r\n//   neutralleIncrement={this.neutralleIncrement}\r\n//   badleIncrement={this.badleIncrement}\r\n\r\n//   />\r\n      \r\n//  {this.state.visible ?? (\r\n// <h2 className={style.feedbackList}>There is no feedback</h2>        \r\n// )} \r\n\r\n\r\n// {this.state.visible && (\r\n// <Statistic \r\n// good={this.state.good}\r\n// neutral={this.state.neutral}\r\n// bad={this.state.bad}\r\n// total={this.totalNumber()}\r\n// positive={this.positiveBack()}\r\n\r\n// />\r\n// )}\r\n\r\n    \r\n// </div>\r\n// )}\r\n// }\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport style from './feedback.module.css';\r\n\r\n\r\nexport const Statistic = ({good, neutral, bad, total, positive} ) => {\r\n\r\n\r\n    return (\r\n\r\n\r\n        <div className={style.statistic} >\r\n     \r\n\r\n   <p className={style.statisticTitle}> <span >Good:{good}</span></p>\r\n    \r\n    \r\n   <p className={style.statisticTitle}> <span>Neutral:{neutral}</span></p>\r\n    \r\n    \r\n   <p className={style.statisticTitle}><span>Bad:{bad}</span></p>\r\n    \r\n    \r\n    \r\n <p className={style.statisticTitle}><span>Total:{total}</span></p>\r\n    \r\n  <p className={style.statisticTitle}><span>Positive feedback:{positive}%</span> </p>\r\n    \r\n    </div>\r\n\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\nStatistic.propTypes = {\r\ngood: PropTypes.number,\r\nneutral: PropTypes.number,\r\nbad: PropTypes.number,\r\ntotal: PropTypes.number,\r\npositive: PropTypes.number,\r\n}","\r\n\r\n\r\n\r\nexport const Section = ({title, children }) => {\r\n    return( <>\r\n{title && <h2>{title}</h2>}\r\n{children}\r\n</>\r\n    )\r\n}\r\n\r\n\r\n","\r\n\r\n\r\nexport const Notification = ({message=''}) => {\r\n    return (\r\n<>\r\n{message && <p>{message}</p>}\r\n</>\r\n\r\n    )\r\n}\r\n\r\n\r\n","\n\nimport FeedbackOptins from './components/Feedback/FeedbackOptins';\n\n\nimport { Component } from 'react';\n\nimport { Statistic } from './components/Feedback/Statistic'\n\nimport { Section } from './components/Section'\nimport { Notification } from './components/Notification';\n\n\nclass  App extends Component  {\n\nstate = {\n  good: 0,\n  neutral: 0,\n  bad: 0\n\n}\n\ntotalNumber = () => {\n  return this.state.good + this.state.neutral + this.state.bad;\n}\n\npositiveBack = () => {\n  return Math.round( (this.state.good * 100) / this.totalNumber())\n}\n  \n\n\n   handleIncrement = (name) => {\n     this.setState(prevState => ({\n      [name]: prevState[name] + 1\n     })\n  \n     )\n       };\n\n \n\n\n\nrender() {\n  const {good, neutral, bad} = this.state;\n  const total = this.totalNumber();\n  const keys = Object.keys(this.state)\n  return (\n<>\n<FeedbackOptins\noptions={keys}\n onLeaveFeedback={this.handleIncrement}\n/>\n\n\n\n<Section title=\"Statistics\" > \n{total > 0 ? (\n<Statistic\ngood={good}\nneutral={neutral}\nbad={bad}\ntotal={total}\npositive={this.positiveBack()}\n/>\n) : (<Notification \nmessage='There is no feedback'\n/>) } \n</Section>\n</>\n  )\n}\n\n\n}\n\n\n\n\n\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"control\":\"feedback_control__2Lkal\",\"button\":\"feedback_button__1IHDu\",\"statistic\":\"feedback_statistic__1ipk8\",\"statisticTitle\":\"feedback_statisticTitle__13Pa3\"};"],"sourceRoot":""}